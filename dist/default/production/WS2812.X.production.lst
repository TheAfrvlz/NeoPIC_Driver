

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Dec 06 19:33:07 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16   000000                     
    17                           ; Version 2.40
    18                           ; Generated 17/11/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4550 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52   000000                     _PORTD	set	3971
    53   000000                     _TRISD	set	3989
    54                           
    55                           ; #config settings
    56                           
    57                           	psect	cinit
    58   007ECA                     __pcinit:
    59                           	callstack 0
    60   007ECA                     start_initialization:
    61                           	callstack 0
    62   007ECA                     __initialization:
    63                           	callstack 0
    64                           
    65                           ; Clear objects allocated to COMRAM (3 bytes)
    66   007ECA  6A0E               	clrf	(__pbssCOMRAM+2)& (0+255),c
    67   007ECC  6A0D               	clrf	(__pbssCOMRAM+1)& (0+255),c
    68   007ECE  6A0C               	clrf	__pbssCOMRAM& (0+255),c
    69   007ED0                     end_of_initialization:
    70                           	callstack 0
    71   007ED0                     __end_of__initialization:
    72                           	callstack 0
    73   007ED0  0100               	movlb	0
    74   007ED2  EF73  F03F         	goto	_main	;jump to C main() function
    75                           
    76                           	psect	bssCOMRAM
    77   00000C                     __pbssCOMRAM:
    78                           	callstack 0
    79   00000C                     _leds:
    80                           	callstack 0
    81   00000C                     	ds	3
    82                           
    83                           	psect	cstackCOMRAM
    84   000001                     __pcstackCOMRAM:
    85                           	callstack 0
    86   000001                     ??_Show:
    87   000001                     SetColor_RGB@i_G:
    88                           	callstack 0
    89   000001                     delay_1s@i:
    90                           	callstack 0
    91                           
    92                           ; 1 bytes @ 0x0
    93   000001                     	ds	1
    94   000002                     SetColor_RGB@i_B:
    95                           	callstack 0
    96   000002                     delay_1s@j:
    97                           	callstack 0
    98                           
    99                           ; 1 bytes @ 0x1
   100   000002                     	ds	1
   101   000003                     SetColor_RGB@i_R:
   102                           	callstack 0
   103   000003                     delay_1s@k:
   104                           	callstack 0
   105                           
   106                           ; 1 bytes @ 0x2
   107   000003                     	ds	1
   108   000004                     Show@PixelColor:
   109                           	callstack 0
   110                           
   111                           ; 2 bytes @ 0x3
   112   000004                     	ds	2
   113   000006                     Show@PixelByte:
   114                           	callstack 0
   115                           
   116                           ; 1 bytes @ 0x5
   117   000006                     	ds	1
   118   000007                     
   119                           ; 2 bytes @ 0x6
   120   000007                     	ds	2
   121   000009                     
   122                           ; 3 bytes @ 0x8
   123   000009                     	ds	3
   124   00000C                     
   125                           ; 1 bytes @ 0xB
   126 ;;
   127 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   128 ;;
   129 ;; *************** function _main *****************
   130 ;; Defined at:
   131 ;;		line 8 in file "Main.c"
   132 ;; Parameters:    Size  Location     Type
   133 ;;  argc            2    6[COMRAM] int 
   134 ;;  argv            3    8[COMRAM] PTR PTR unsigned char 
   135 ;; Auto vars:     Size  Location     Type
   136 ;;		None
   137 ;; Return value:  Size  Location     Type
   138 ;;                  2    6[COMRAM] int 
   139 ;; Registers used:
   140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   141 ;; Tracked objects:
   142 ;;		On entry : 0/0
   143 ;;		On exit  : 0/0
   144 ;;		Unchanged: 0/0
   145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   146 ;;      Params:         5       0       0       0       0       0       0       0       0
   147 ;;      Locals:         0       0       0       0       0       0       0       0       0
   148 ;;      Temps:          0       0       0       0       0       0       0       0       0
   149 ;;      Totals:         5       0       0       0       0       0       0       0       0
   150 ;;Total ram usage:        5 bytes
   151 ;; Hardware stack levels required when called: 1
   152 ;; This function calls:
   153 ;;		_SetColor_RGB
   154 ;;		_Show
   155 ;;		_delay_1s
   156 ;; This function is called by:
   157 ;;		Startup code after reset
   158 ;; This function uses a non-reentrant model
   159 ;;
   160                           
   161                           	psect	text0
   162   007EE6                     __ptext0:
   163                           	callstack 0
   164   007EE6                     _main:
   165                           	callstack 30
   166   007EE6                     
   167                           ;Main.c: 10:     TRISD = 0x00;
   168   007EE6  0E00               	movlw	0
   169   007EE8  6E95               	movwf	149,c	;volatile
   170                           
   171                           ;Main.c: 11:     PORTD = 0x00;
   172   007EEA  0E00               	movlw	0
   173   007EEC  6E83               	movwf	131,c	;volatile
   174   007EEE                     l800:
   175                           
   176                           ;Main.c: 14:     {;Main.c: 18:         SetColor_RGB(56,161,168);
   177   007EEE  0EA1               	movlw	161
   178   007EF0  6E01               	movwf	SetColor_RGB@i_G^0,c
   179   007EF2  0EA8               	movlw	168
   180   007EF4  6E02               	movwf	SetColor_RGB@i_B^0,c
   181   007EF6  0E38               	movlw	56
   182   007EF8  EC6B  F03F         	call	_SetColor_RGB
   183   007EFC                     
   184                           ;Main.c: 19:         Show();
   185   007EFC  ECA9  F03F         	call	_Show	;wreg free
   186   007F00                     
   187                           ;Main.c: 20:         delay_1s();
   188   007F00  EC86  F03F         	call	_delay_1s	;wreg free
   189   007F04  EF77  F03F         	goto	l800
   190   007F08  EF00  F000         	goto	start
   191   007F0C                     __end_of_main:
   192                           	callstack 0
   193                           
   194 ;; *************** function _delay_1s *****************
   195 ;; Defined at:
   196 ;;		line 40 in file "WS28_Adafruit.c"
   197 ;; Parameters:    Size  Location     Type
   198 ;;		None
   199 ;; Auto vars:     Size  Location     Type
   200 ;;  k               1    2[COMRAM] unsigned char 
   201 ;;  j               1    1[COMRAM] unsigned char 
   202 ;;  i               1    0[COMRAM] unsigned char 
   203 ;; Return value:  Size  Location     Type
   204 ;;                  1    wreg      void 
   205 ;; Registers used:
   206 ;;		wreg, status,2, status,0
   207 ;; Tracked objects:
   208 ;;		On entry : 0/0
   209 ;;		On exit  : 0/0
   210 ;;		Unchanged: 0/0
   211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   212 ;;      Params:         0       0       0       0       0       0       0       0       0
   213 ;;      Locals:         3       0       0       0       0       0       0       0       0
   214 ;;      Temps:          0       0       0       0       0       0       0       0       0
   215 ;;      Totals:         3       0       0       0       0       0       0       0       0
   216 ;;Total ram usage:        3 bytes
   217 ;; Hardware stack levels used: 1
   218 ;; This function calls:
   219 ;;		Nothing
   220 ;; This function is called by:
   221 ;;		_main
   222 ;; This function uses a non-reentrant model
   223 ;;
   224                           
   225                           	psect	text1
   226   007F0C                     __ptext1:
   227                           	callstack 0
   228   007F0C                     _delay_1s:
   229                           	callstack 30
   230   007F0C                     
   231                           ;WS28_Adafruit.c: 42:     for (unsigned char i = 0; i < 255; i++)
   232   007F0C  0E00               	movlw	0
   233   007F0E  6E01               	movwf	delay_1s@i^0,c
   234   007F10                     l760:
   235                           
   236                           ;WS28_Adafruit.c: 43:     {;WS28_Adafruit.c: 44:         for (unsigned char j = 0; j < 2
      +                          55; j++)
   237   007F10  0E00               	movlw	0
   238   007F12  6E02               	movwf	delay_1s@j^0,c
   239   007F14                     l766:
   240                           
   241                           ;WS28_Adafruit.c: 45:         {;WS28_Adafruit.c: 46:             for (unsigned char k = 
      +                          0; k < 22; k++)
   242   007F14  0E00               	movlw	0
   243   007F16  6E03               	movwf	delay_1s@k^0,c
   244   007F18                     l46:
   245   007F18  F000               	nop		;# 
   246   007F1A                     
   247                           ;WS28_Adafruit.c: 49:             }
   248   007F1A  2A03               	incf	delay_1s@k^0,f,c
   249   007F1C  0E15               	movlw	21
   250   007F1E  6403               	cpfsgt	delay_1s@k^0,c
   251   007F20  EF94  F03F         	goto	u51
   252   007F24  EF96  F03F         	goto	u50
   253   007F28                     u51:
   254   007F28  EF8C  F03F         	goto	l46
   255   007F2C                     u50:
   256   007F2C                     
   257                           ;WS28_Adafruit.c: 50:         }
   258   007F2C  2A02               	incf	delay_1s@j^0,f,c
   259   007F2E  2802               	incf	delay_1s@j^0,w,c
   260   007F30  A4D8               	btfss	status,2,c
   261   007F32  EF9D  F03F         	goto	u61
   262   007F36  EF9F  F03F         	goto	u60
   263   007F3A                     u61:
   264   007F3A  EF8A  F03F         	goto	l766
   265   007F3E                     u60:
   266   007F3E                     
   267                           ;WS28_Adafruit.c: 51:     }
   268   007F3E  2A01               	incf	delay_1s@i^0,f,c
   269   007F40  2801               	incf	delay_1s@i^0,w,c
   270   007F42  A4D8               	btfss	status,2,c
   271   007F44  EFA6  F03F         	goto	u71
   272   007F48  EFA8  F03F         	goto	u70
   273   007F4C                     u71:
   274   007F4C  EF88  F03F         	goto	l760
   275   007F50                     u70:
   276   007F50  0012               	return		;funcret
   277   007F52                     __end_of_delay_1s:
   278                           	callstack 0
   279                           
   280 ;; *************** function _Show *****************
   281 ;; Defined at:
   282 ;;		line 21 in file "WS28_Adafruit.c"
   283 ;; Parameters:    Size  Location     Type
   284 ;;		None
   285 ;; Auto vars:     Size  Location     Type
   286 ;;  PixelByte       1    5[COMRAM] unsigned char 
   287 ;;  PixelColor      2    3[COMRAM] unsigned int 
   288 ;; Return value:  Size  Location     Type
   289 ;;                  1    wreg      void 
   290 ;; Registers used:
   291 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   292 ;; Tracked objects:
   293 ;;		On entry : 0/0
   294 ;;		On exit  : 0/0
   295 ;;		Unchanged: 0/0
   296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   297 ;;      Params:         0       0       0       0       0       0       0       0       0
   298 ;;      Locals:         3       0       0       0       0       0       0       0       0
   299 ;;      Temps:          3       0       0       0       0       0       0       0       0
   300 ;;      Totals:         6       0       0       0       0       0       0       0       0
   301 ;;Total ram usage:        6 bytes
   302 ;; Hardware stack levels used: 1
   303 ;; This function calls:
   304 ;;		Nothing
   305 ;; This function is called by:
   306 ;;		_main
   307 ;; This function uses a non-reentrant model
   308 ;;
   309                           
   310                           	psect	text2
   311   007F52                     __ptext2:
   312                           	callstack 0
   313   007F52                     _Show:
   314                           	callstack 30
   315   007F52                     
   316                           ;WS28_Adafruit.c: 23:     for (unsigned int PixelColor = 0; PixelColor <= 2; PixelColor+
      +                          +)
   317   007F52  0E00               	movlw	0
   318   007F54  6E05               	movwf	(Show@PixelColor+1)^0,c
   319   007F56  0E00               	movlw	0
   320   007F58  6E04               	movwf	Show@PixelColor^0,c
   321   007F5A                     l734:
   322                           
   323                           ;WS28_Adafruit.c: 24:     {;WS28_Adafruit.c: 25:         for (unsigned char PixelByte = 
      +                          0; PixelByte <= 7; PixelByte++)
   324   007F5A  0E00               	movlw	0
   325   007F5C  6E06               	movwf	Show@PixelByte^0,c
   326   007F5E                     l740:
   327                           
   328                           ;WS28_Adafruit.c: 26:         {;WS28_Adafruit.c: 27:             if ((leds[PixelColor] &
      +                           (1 << PixelByte)) != 0)
   329   007F5E  0E0C               	movlw	low _leds
   330   007F60  2404               	addwf	Show@PixelColor^0,w,c
   331   007F62  6ED9               	movwf	fsr2l,c
   332   007F64  0E00               	movlw	high _leds
   333   007F66  2005               	addwfc	(Show@PixelColor+1)^0,w,c
   334   007F68  6EDA               	movwf	fsr2h,c
   335   007F6A  50DF               	movf	indf2,w,c
   336   007F6C  6E01               	movwf	??_Show^0,c
   337   007F6E  C006  F002         	movff	Show@PixelByte,??_Show+1
   338   007F72  0E01               	movlw	1
   339   007F74  6E03               	movwf	(??_Show+2)^0,c
   340   007F76  2A02               	incf	(??_Show+1)^0,f,c
   341   007F78  EFC0  F03F         	goto	u14
   342   007F7C                     u15:
   343   007F7C  90D8               	bcf	status,0,c
   344   007F7E  3603               	rlcf	(??_Show+2)^0,f,c
   345   007F80                     u14:
   346   007F80  2E02               	decfsz	(??_Show+1)^0,f,c
   347   007F82  EFBE  F03F         	goto	u15
   348   007F86  5003               	movf	(??_Show+2)^0,w,c
   349   007F88  1401               	andwf	??_Show^0,w,c
   350   007F8A  0900               	iorlw	0
   351   007F8C  B4D8               	btfsc	status,2,c
   352   007F8E  EFCB  F03F         	goto	u21
   353   007F92  EFCD  F03F         	goto	u20
   354   007F96                     u21:
   355   007F96  EFDC  F03F         	goto	l744
   356   007F9A                     u20:
   357   007F9A                     
   358                           ;WS28_Adafruit.c: 28:             {;WS28_Adafruit.c: 29:                { PORTD = 0x01u;
      +                           { __asm("NOP"); __asm("NOP"); __asm("NOP"); __asm("NOP"); __asm("NOP"); __asm("NOP"); }
      +                           PORTD = 0x00u; { __asm("NOP"); __asm("NOP"); __asm("NOP"); } }
   359   007F9A  0E01               	movlw	1
   360   007F9C  6E83               	movwf	131,c	;volatile
   361   007F9E  F000               	nop		;# 
   362   007FA0  F000               	nop		;# 
   363   007FA2  F000               	nop		;# 
   364   007FA4  F000               	nop		;# 
   365   007FA6  F000               	nop		;# 
   366   007FA8  F000               	nop		;# 
   367   007FAA  0E00               	movlw	0
   368   007FAC  6E83               	movwf	131,c	;volatile
   369   007FAE  F000               	nop		;# 
   370   007FB0  F000               	nop		;# 
   371   007FB2  F000               	nop		;# 
   372                           
   373                           ;WS28_Adafruit.c: 30:             }
   374   007FB4  EFE9  F03F         	goto	l746
   375   007FB8                     l744:
   376                           
   377                           ;WS28_Adafruit.c: 32:             {;WS28_Adafruit.c: 33:                { PORTD = 0x01u;
      +                           { __asm("NOP"); __asm("NOP"); __asm("NOP"); } PORTD = 0x00u; { __asm("NOP"); __asm("NOP
      +                          "); __asm("NOP"); __asm("NOP"); __asm("NOP"); __asm("NOP"); } }
   378   007FB8  0E01               	movlw	1
   379   007FBA  6E83               	movwf	131,c	;volatile
   380   007FBC  F000               	nop		;# 
   381   007FBE  F000               	nop		;# 
   382   007FC0  F000               	nop		;# 
   383   007FC2  0E00               	movlw	0
   384   007FC4  6E83               	movwf	131,c	;volatile
   385   007FC6  F000               	nop		;# 
   386   007FC8  F000               	nop		;# 
   387   007FCA  F000               	nop		;# 
   388   007FCC  F000               	nop		;# 
   389   007FCE  F000               	nop		;# 
   390   007FD0  F000               	nop		;# 
   391   007FD2                     l746:
   392                           
   393                           ;WS28_Adafruit.c: 35:         }
   394   007FD2  2A06               	incf	Show@PixelByte^0,f,c
   395   007FD4  0E07               	movlw	7
   396   007FD6  6406               	cpfsgt	Show@PixelByte^0,c
   397   007FD8  EFF0  F03F         	goto	u31
   398   007FDC  EFF2  F03F         	goto	u30
   399   007FE0                     u31:
   400   007FE0  EFAF  F03F         	goto	l740
   401   007FE4                     u30:
   402   007FE4                     
   403                           ;WS28_Adafruit.c: 36:     }
   404   007FE4  4A04               	infsnz	Show@PixelColor^0,f,c
   405   007FE6  2A05               	incf	(Show@PixelColor+1)^0,f,c
   406   007FE8  5005               	movf	(Show@PixelColor+1)^0,w,c
   407   007FEA  E109               	bnz	u40
   408   007FEC  0E03               	movlw	3
   409   007FEE  5C04               	subwf	Show@PixelColor^0,w,c
   410   007FF0  A0D8               	btfss	status,0,c
   411   007FF2  EFFD  F03F         	goto	u41
   412   007FF6  EFFF  F03F         	goto	u40
   413   007FFA                     u41:
   414   007FFA  EFAD  F03F         	goto	l734
   415   007FFE                     u40:
   416   007FFE  0012               	return		;funcret
   417   008000                     __end_of_Show:
   418                           	callstack 0
   419                           
   420 ;; *************** function _SetColor_RGB *****************
   421 ;; Defined at:
   422 ;;		line 14 in file "WS28_Adafruit.c"
   423 ;; Parameters:    Size  Location     Type
   424 ;;  i_R             1    wreg     unsigned char 
   425 ;;  i_G             1    0[COMRAM] unsigned char 
   426 ;;  i_B             1    1[COMRAM] unsigned char 
   427 ;; Auto vars:     Size  Location     Type
   428 ;;  i_R             1    2[COMRAM] unsigned char 
   429 ;; Return value:  Size  Location     Type
   430 ;;                  1    wreg      void 
   431 ;; Registers used:
   432 ;;		wreg
   433 ;; Tracked objects:
   434 ;;		On entry : 0/0
   435 ;;		On exit  : 0/0
   436 ;;		Unchanged: 0/0
   437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   438 ;;      Params:         2       0       0       0       0       0       0       0       0
   439 ;;      Locals:         1       0       0       0       0       0       0       0       0
   440 ;;      Temps:          0       0       0       0       0       0       0       0       0
   441 ;;      Totals:         3       0       0       0       0       0       0       0       0
   442 ;;Total ram usage:        3 bytes
   443 ;; Hardware stack levels used: 1
   444 ;; This function calls:
   445 ;;		Nothing
   446 ;; This function is called by:
   447 ;;		_main
   448 ;; This function uses a non-reentrant model
   449 ;;
   450                           
   451                           	psect	text3
   452   007ED6                     __ptext3:
   453                           	callstack 0
   454   007ED6                     _SetColor_RGB:
   455                           	callstack 30
   456                           
   457                           ;incstack = 0
   458                           ;SetColor_RGB@i_R stored from wreg
   459   007ED6  6E03               	movwf	SetColor_RGB@i_R^0,c
   460   007ED8                     
   461                           ;WS28_Adafruit.c: 14: void SetColor_RGB(unsigned char i_R, unsigned char i_G, unsigned c
      +                          har i_B);WS28_Adafruit.c: 15: {;WS28_Adafruit.c: 16:     leds[2] = i_B;
   462   007ED8  C002  F00E         	movff	SetColor_RGB@i_B,_leds+2
   463                           
   464                           ;WS28_Adafruit.c: 17:     leds[1] = i_G;
   465   007EDC  C001  F00D         	movff	SetColor_RGB@i_G,_leds+1
   466   007EE0                     
   467                           ;WS28_Adafruit.c: 18:     leds[0] = i_R;
   468   007EE0  C003  F00C         	movff	SetColor_RGB@i_R,_leds
   469   007EE4  0012               	return		;funcret
   470   007EE6                     __end_of_SetColor_RGB:
   471                           	callstack 0
   472   000000                     
   473                           	psect	rparam
   474   000000                     
   475                           	psect	idloc
   476                           
   477                           ;Config register IDLOC0 @ 0x200000
   478                           ;	unspecified, using default values
   479   200000                     	org	2097152
   480   200000  FF                 	db	255
   481                           
   482                           ;Config register IDLOC1 @ 0x200001
   483                           ;	unspecified, using default values
   484   200001                     	org	2097153
   485   200001  FF                 	db	255
   486                           
   487                           ;Config register IDLOC2 @ 0x200002
   488                           ;	unspecified, using default values
   489   200002                     	org	2097154
   490   200002  FF                 	db	255
   491                           
   492                           ;Config register IDLOC3 @ 0x200003
   493                           ;	unspecified, using default values
   494   200003                     	org	2097155
   495   200003  FF                 	db	255
   496                           
   497                           ;Config register IDLOC4 @ 0x200004
   498                           ;	unspecified, using default values
   499   200004                     	org	2097156
   500   200004  FF                 	db	255
   501                           
   502                           ;Config register IDLOC5 @ 0x200005
   503                           ;	unspecified, using default values
   504   200005                     	org	2097157
   505   200005  FF                 	db	255
   506                           
   507                           ;Config register IDLOC6 @ 0x200006
   508                           ;	unspecified, using default values
   509   200006                     	org	2097158
   510   200006  FF                 	db	255
   511                           
   512                           ;Config register IDLOC7 @ 0x200007
   513                           ;	unspecified, using default values
   514   200007                     	org	2097159
   515   200007  FF                 	db	255
   516                           
   517                           	psect	config
   518                           
   519                           ;Config register CONFIG1L @ 0x300000
   520                           ;	PLL Prescaler Selection bits
   521                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
   522                           ;	System Clock Postscaler Selection bits
   523                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   524                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   525                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   526   300000                     	org	3145728
   527   300000  01                 	db	1
   528                           
   529                           ;Config register CONFIG1H @ 0x300001
   530                           ;	Oscillator Selection bits
   531                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
   532                           ;	Fail-Safe Clock Monitor Enable bit
   533                           ;	FCMEN = 0x0, unprogrammed default
   534                           ;	Internal/External Oscillator Switchover bit
   535                           ;	IESO = OFF, Oscillator Switchover mode disabled
   536   300001                     	org	3145729
   537   300001  0E                 	db	14
   538                           
   539                           ;Config register CONFIG2L @ 0x300002
   540                           ;	Power-up Timer Enable bit
   541                           ;	PWRT = ON, PWRT enabled
   542                           ;	Brown-out Reset Enable bits
   543                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   544                           ;	Brown-out Reset Voltage bits
   545                           ;	BORV = 3, Minimum setting 2.05V
   546                           ;	USB Voltage Regulator Enable bit
   547                           ;	VREGEN = OFF, USB voltage regulator disabled
   548   300002                     	org	3145730
   549   300002  18                 	db	24
   550                           
   551                           ;Config register CONFIG2H @ 0x300003
   552                           ;	Watchdog Timer Enable bit
   553                           ;	WDT = ON, WDT enabled
   554                           ;	Watchdog Timer Postscale Select bits
   555                           ;	WDTPS = 32768, 1:32768
   556   300003                     	org	3145731
   557   300003  1F                 	db	31
   558                           
   559                           ; Padding undefined space
   560   300004                     	org	3145732
   561   300004  FF                 	db	255
   562                           
   563                           ;Config register CONFIG3H @ 0x300005
   564                           ;	CCP2 MUX bit
   565                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   566                           ;	PORTB A/D Enable bit
   567                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   568                           ;	Low-Power Timer 1 Oscillator Enable bit
   569                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   570                           ;	MCLR Pin Enable bit
   571                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   572   300005                     	org	3145733
   573   300005  83                 	db	131
   574                           
   575                           ;Config register CONFIG4L @ 0x300006
   576                           ;	Stack Full/Underflow Reset Enable bit
   577                           ;	STVREN = ON, Stack full/underflow will cause Reset
   578                           ;	Single-Supply ICSP Enable bit
   579                           ;	LVP = OFF, Single-Supply ICSP disabled
   580                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   581                           ;	ICPRT = OFF, ICPORT disabled
   582                           ;	Extended Instruction Set Enable bit
   583                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   584                           ;	Background Debugger Enable bit
   585                           ;	DEBUG = 0x1, unprogrammed default
   586   300006                     	org	3145734
   587   300006  81                 	db	129
   588                           
   589                           ; Padding undefined space
   590   300007                     	org	3145735
   591   300007  FF                 	db	255
   592                           
   593                           ;Config register CONFIG5L @ 0x300008
   594                           ;	Code Protection bit
   595                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   596                           ;	Code Protection bit
   597                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   598                           ;	Code Protection bit
   599                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   600                           ;	Code Protection bit
   601                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   602   300008                     	org	3145736
   603   300008  0F                 	db	15
   604                           
   605                           ;Config register CONFIG5H @ 0x300009
   606                           ;	Boot Block Code Protection bit
   607                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   608                           ;	Data EEPROM Code Protection bit
   609                           ;	CPD = OFF, Data EEPROM is not code-protected
   610   300009                     	org	3145737
   611   300009  C0                 	db	192
   612                           
   613                           ;Config register CONFIG6L @ 0x30000A
   614                           ;	Write Protection bit
   615                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   616                           ;	Write Protection bit
   617                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   618                           ;	Write Protection bit
   619                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   620                           ;	Write Protection bit
   621                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   622   30000A                     	org	3145738
   623   30000A  0F                 	db	15
   624                           
   625                           ;Config register CONFIG6H @ 0x30000B
   626                           ;	Configuration Register Write Protection bit
   627                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   628                           ;	Boot Block Write Protection bit
   629                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   630                           ;	Data EEPROM Write Protection bit
   631                           ;	WRTD = OFF, Data EEPROM is not write-protected
   632   30000B                     	org	3145739
   633   30000B  E0                 	db	224
   634                           
   635                           ;Config register CONFIG7L @ 0x30000C
   636                           ;	Table Read Protection bit
   637                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   638                           ;	Table Read Protection bit
   639                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   640                           ;	Table Read Protection bit
   641                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   642                           ;	Table Read Protection bit
   643                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   644   30000C                     	org	3145740
   645   30000C  0F                 	db	15
   646                           
   647                           ;Config register CONFIG7H @ 0x30000D
   648                           ;	Boot Block Table Read Protection bit
   649                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   650   30000D                     	org	3145741
   651   30000D  40                 	db	64
   652                           tosu	equ	0xFFF
   653                           tosh	equ	0xFFE
   654                           tosl	equ	0xFFD
   655                           stkptr	equ	0xFFC
   656                           pclatu	equ	0xFFB
   657                           pclath	equ	0xFFA
   658                           pcl	equ	0xFF9
   659                           tblptru	equ	0xFF8
   660                           tblptrh	equ	0xFF7
   661                           tblptrl	equ	0xFF6
   662                           tablat	equ	0xFF5
   663                           prodh	equ	0xFF4
   664                           prodl	equ	0xFF3
   665                           indf0	equ	0xFEF
   666                           postinc0	equ	0xFEE
   667                           postdec0	equ	0xFED
   668                           preinc0	equ	0xFEC
   669                           plusw0	equ	0xFEB
   670                           fsr0h	equ	0xFEA
   671                           fsr0l	equ	0xFE9
   672                           wreg	equ	0xFE8
   673                           indf1	equ	0xFE7
   674                           postinc1	equ	0xFE6
   675                           postdec1	equ	0xFE5
   676                           preinc1	equ	0xFE4
   677                           plusw1	equ	0xFE3
   678                           fsr1h	equ	0xFE2
   679                           fsr1l	equ	0xFE1
   680                           bsr	equ	0xFE0
   681                           indf2	equ	0xFDF
   682                           postinc2	equ	0xFDE
   683                           postdec2	equ	0xFDD
   684                           preinc2	equ	0xFDC
   685                           plusw2	equ	0xFDB
   686                           fsr2h	equ	0xFDA
   687                           fsr2l	equ	0xFD9
   688                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     11      14
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Show

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     0      5     398
                                              6 COMRAM     5     0      5
                       _SetColor_RGB
                               _Show
                           _delay_1s
 ---------------------------------------------------------------------------------
 (1) _delay_1s                                             3     3      0      90
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Show                                                 6     6      0      90
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _SetColor_RGB                                         3     1      2     218
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SetColor_RGB
   _Show
   _delay_1s

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      24        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRh          6A      0       0      21        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      B       E       1       14.7%
BITBIGSFRll         23      0       0      23        0.0%
BITBIGSFRlh         11      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       E      18        0.0%
DATA                 0      0       E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Dec 06 19:33:07 2022

                     l30 7EE4                       l46 7F18                       l39 7FFE  
                     l48 7F50                       u20 7F9A                       u21 7F96  
                     u30 7FE4                       u14 7F80                       u31 7FE0  
                     u15 7F7C                       u40 7FFE                       u41 7FFA  
                     u50 7F2C                       u51 7F28                       u60 7F3E  
                     u61 7F3A                       u70 7F50                       u71 7F4C  
                    l800 7EEE                      l802 7EFC                      l740 7F5E  
                    l804 7F00                      l750 7FE4                      l742 7F9A  
                    l734 7F5A                      l752 7FE8                      l744 7FB8  
                    l728 7F52                      l760 7F10                      l746 7FD2  
                    l754 7F0C                      l748 7FD4                      l780 7F3E  
                    l772 7F1A                      l782 7F40                      l774 7F1C  
                    l766 7F14                      l776 7F2C                      l794 7ED8  
                    l778 7F2E                      l796 7EE0                      l798 7EE6  
                   _Show 7F52                     _main 7EE6                     _leds 000C  
                   indf2 000FDF                     fsr2l 000FD9                     start 0000  
           ___param_bank 000000                    ?_Show 0001                    ?_main 0007  
                  _PORTD 000F83                    _TRISD 000F95                    status 000FD8  
        __initialization 7ECA             __end_of_Show 8000             __end_of_main 7F0C  
                 ??_Show 0001                   ??_main 000C            __activetblptr 000000  
       __end_of_delay_1s 7F52            ?_SetColor_RGB 0001                   isa$std 000001  
             __accesstop 0060  __end_of__initialization 7ED0            ___rparam_used 000001  
         __pcstackCOMRAM 0001           ??_SetColor_RGB 0003                ?_delay_1s 0001  
          Show@PixelByte 0006                  __Hparam 0000                  __Lparam 0000  
                __pcinit 7ECA                  __ramtop 0800                  __ptext0 7EE6  
                __ptext1 7F0C                  __ptext2 7F52                  __ptext3 7ED6  
             ??_delay_1s 0001     __end_of_SetColor_RGB 7EE6     end_of_initialization 7ED0  
    start_initialization 7ECA              __pbssCOMRAM 000C             _SetColor_RGB 7ED6  
              delay_1s@i 0001                delay_1s@j 0002                delay_1s@k 0003  
         Show@PixelColor 0004                 __Hrparam 0000                 __Lrparam 0000  
               _delay_1s 7F0C                 isa$xinst 000000                 main@argc 0007  
               main@argv 0009          SetColor_RGB@i_B 0002          SetColor_RGB@i_G 0001  
        SetColor_RGB@i_R 0003  
